name: Unit tests

on:
  workflow_call:
    secrets:
      httpbin_url:
        required: false
        description: Used to set the HTTPBIN_URL environment variable

jobs:
  unit_tests:
    name: Unit tests
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"] # All supported Python versions.
    runs-on: ${{ matrix.os }}
    env:
      HTTPBIN_URL: ${{ secrets.httpbin_url || 'https://httpbin.org' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry for version checking
        run: |
          pip install poetry

      - name: Check Python version against project requirements
        shell: python
        run: |
          import sys
          from contextlib import suppress
          from poetry.core.constraints.version import parse_constraint

          try:
            import tomllib
          except ImportError:
            import tomli as tomllib

          config = tomllib.load(open('pyproject.toml', 'rb'))
          constraints = []

          with suppress(KeyError):
            constraints.append(parse_constraint(config['tool']['poetry']['dependencies']['python']))
          with suppress(KeyError):
            constraints.append(parse_constraint(config['project']['requires-python']))

          python_version = parse_constraint('${{ matrix.python-version }}')
          if not all(con.allows(python_version) for con in constraints):
            print(f'Python version {str(python_version)} is not allowed by project settings', file=sys.stderr)
            sys.exit(1)

      - name: Uninstall global poetry again
        run: |
          pip uninstall -y poetry

      - name: Install Python dependencies
        run: |
          pipx install --python ${{ matrix.python-version }} poetry
          make install-dev

      - name: Run unit tests
        run: make unit-tests
