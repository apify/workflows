inputs:
  python_version:
    required: false
    type: string
    default: "3.13"
runs:
  using: composite
  steps:
    - name: Set up Python ${{ inputs.python_version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}

    - name: Install Poetry for version checking
      run: |
        pip install poetry

    - name: Check Python version against project requirements
      shell: python
      run: |
        import sys
        from contextlib import suppress
        from poetry.core.constraints.version import parse_constraint

        try:
          import tomllib
        except ImportError:
          import tomli as tomllib

        config = tomllib.load(open('pyproject.toml', 'rb'))
        constraints = []

        with suppress(KeyError):
          constraints.append(parse_constraint(config['tool']['poetry']['dependencies']['python']))
        with suppress(KeyError):
          constraints.append(parse_constraint(config['project']['requires-python']))

        python_version = parse_constraint('${{ inputs.python_version }}')
        if not all(con.allows(python_version) for con in constraints):
          print(f'Python version {str(python_version)} is not allowed by project settings', file=sys.stderr)
          sys.exit(1)

    - name: Get rid of Poetry again
      run: |
        pip uninstall poetry
